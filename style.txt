.navbar {
  background-color: var(--title-color-dark);
  padding: 10px;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 9999;
  height: 70px;
  align-items: center;
}

.navbar.red-background {
  background: linear-gradient(to right, rgba(14, 122, 126, 0.7), rgba(124, 2, 2, 0.5));
  transition: background 0.4s;
}


.navbar-list {
  list-style-type: none;
  display: flex;
  justify-content: center;
  align-items: center;
}

.navbar-item {
  margin-right: var(--mb-0-75);
}

.navbar-link {
  color: #fff;
  text-decoration: none;
  padding: var(--big-font-size);
}

.navbar-link:hover {
  background: linear-gradient(to right, rgba(236, 29, 46, 0.4), rgba(105, 3, 88, 0.4));
  color: var(--text-color);
  font-weight: bold;
}

.navbar-logo {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-right: 10px;
  margin-top: var(--mb-1-5);
}

.navbar-logo img {
  width: 70px;
  height: 70px;
  border-radius: 50%;
  box-shadow: 0px 0px 5px rgba(0, 0, 0, 1);
}

import React, { useEffect, useState } from 'react';
import "../../assets/styles/Animation.css";
import image from "../../assets/img/favicon.gif";
import images from "../../assets/img/favicons.gif"
const Animation: React.FC = () => {
    const [cursorPosition, setCursorPosition] = useState({ x: 0, y: 0 });

    useEffect(() => {
      const handleMouseMove = (event: MouseEvent) => {
        const { clientX, clientY } = event;
        setCursorPosition({ x: clientX, y: clientY });
      };
  
      const handleMouseLeave = () => {
        setCursorPosition({ x: 0, y: 0 });
      };
  
      document.body.addEventListener('mousemove', handleMouseMove);
      document.body.addEventListener('mouseleave', handleMouseLeave);
  
      return () => {
        document.body.removeEventListener('mousemove', handleMouseMove);
        document.body.removeEventListener('mouseleave', handleMouseLeave);
      };
    }, []);
  
    return (
      <div className="App">
        <div
          className="cursor-trace"
          style={{
            left: `${cursorPosition.x}px`,
            top: `${cursorPosition.y}px`,
            opacity: cursorPosition.x !== 0 && cursorPosition.y !== 0 ? 1 : 0
          }}
        ></div>
        <div className="fire-effect"></div>
        <h1>woewewe</h1>

        <img src={image} alt="Images" className='image' />
        <img src={images} alt="Images" className='images' />
        <img src={images} alt="Imagess" className='imagess' />
        <img src={images} alt="Images" className='imagesss' />
      </div>
    );
  };
  

export default Animation;









Annimation-------------------------------


.container__animation {
    background-color: rgb(0, 255, 170);
    height: 800px;
}
.container__animation h1{
    background-color: black;
    color: aliceblue;
    display: inline;
    height: 300px;
}
.container__animation h1:hover{
    background-color: black;
    color: aliceblue;
    display:block;
    height: 300px;
}
.image{
    display: inline;
    border-radius: 10% 50%;
}
.images{
    border-bottom-right-radius: 100%;
}
.imagess{
    border-bottom-left-radius: 50%;
    border-top-left-radius: 50%;
}
.imagesss{
    border-bottom-right-radius: 50%;
    border-top-right-radius: 50%;
}
.container__animation button {
    position: relative;
    padding: 1em 1.5em;
    color: #fff;
    font-size: 1.15rem;
    border-radius: 100vmax;
    border: 2px solid #fff;
    text-transform: uppercase;
    overflow: hidden;
    cursor: pointer;
  }
  
  .container__animation button::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 255, 255, 0.2);
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .container__animation button:hover::after {
    opacity: 1;
  }
  .cursor-trace {
    position: absolute;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background-color: red;
    mix-blend-mode: screen;
    pointer-events: none;
    transform: translate(-50%, -50%);
    transition: opacity 0.2s ease;
    animation: smokeAnimation 3s infinite;
  }
  @keyframes smokeAnimation {
    0% {
      opacity: 0;
    }
    50% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }
  .fire-effect {
    width: 200px;
    height: 300px;
    position: relative;
    overflow: hidden;
  }
  
  .fire-effect::before,
  .fire-effect::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    background-color: #ff0000;
  }
  
  .fire-effect::before {
    width: 100%;
    height: 80px;
    border-radius: 50% 50% 0 0;
  }
  
  .fire-effect::after {
    width: 50%;
    height: 200px;
    border-radius: 50% 50% 0 0;
    transform: translateX(-50%) rotate(45deg);
  }
  
  @keyframes fireAnimation {
    0% {
      transform: translateX(-50%) rotate(0deg) scaleY(1);
    }
    50% {
      transform: translateX(-50%) rotate(5deg) scaleY(1.1);
    }
    100% {
      transform: translateX(-50%) rotate(0deg) scaleY(1);
    }
  }
  
  .fire-effect::before,
  .fire-effect::after {
    animation: fireAnimation 1s infinite alternate;
  }
  